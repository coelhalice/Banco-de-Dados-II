## Questão 01

1. Busque pelo professor `“Teacher”` cujo nome seja “Renzo”, retorne o **ano_nasc** e o **CPF**.
MATCH (t:Teacher {name: 'Renzo'})
RETURN t.ano_nasc, t.cpf


2. Busque pelos professores `“Teacher”` cujo nome comece com a letra **“M”**, retorne o **name** e o **cpf**.
MATCH (t:Teacher)
WHERE t.name STARTS WITH 'M'
RETURN t.name, t.cpf

3. Busque pelos nomes de todas as cidades `“City”` e retorne-os.
MATCH (c:City)
RETURN c.name

4. Busque pelas escolas `“School”`, onde o number seja maior ou igual a 150 e menor ou igual a 550, retorne o nome da escola, o endereço e o número.
MATCH (s:School)
WHERE s.number >= 150 AND s.number <= 550
RETURN s.name, s.address, s.number


## Questão 02

1. Encontre o ano de nascimento do professor mais jovem e do professor mais velho.
MATCH (t:Teacher)
RETURN MIN(t.ano_nasc), MAX(t.ano_nasc)

2. Encontre a média aritmética para os habitantes de todas as cidades, use a propriedade **“population”**.
MATCH (c:City)
RETURN AVG(c.population)

3. Encontre a cidade cujo **CEP** seja igual a **“37540-000”** e retorne o nome com todas as letras **“a”** substituídas por **“A”** .
MATCH (c:City {cep: '37540-000'})
RETURN REPLACE(c.name, 'a', 'A')

4. Para todos os professores, retorne um caractere, iniciando a partir da 3ª letra do
nome.
MATCH (t:Teacher)
RETURN SUBSTRING(t.name, 3, 1)